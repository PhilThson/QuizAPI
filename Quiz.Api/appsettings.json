{
    "Logging": {
    },
    "ConnectionStrings": {
        "Default": "Data Source=sql_server,1433;Initial Catalog=PlacowkaQuizDb;User ID=sa;Password=Str0ngP@ssw0rd;TrustServerCertificate=true"
        //Działająca wersja na dockerze:
        //"Default": "Server=sql_server;Database=PlacowkaQuizDb;User Id=sa;Password=Str0ngP@ssw0rd;TrustServerCertificate=true;Persist Security Info=True;Trusted_Connection=True;Integrated Security=False"
    },
    "AllowedHosts": "*",
    "Kestrel": {
        "EndPoints": {
            "Http": {
                "Url": "http://+:5111"
            },
            "Https": {
                "Url": "https://+:7011"
            }
        }
    },
    "NLog": {
        "throwConfigExceptions": true,
        "targets": {
            "async": true,
          "database": {
            "type": "Database",
            "dbProvider": "System.Data.SqlClient",
            //"connectionString": "Data Source=sql_server,1433;Initial Catalog=PlacowkaQuizDb;User ID=sa;Password=Str0ngP@ssw0rd;TrustServerCertificate=true",
            "connectionString": "Server=.;Database=PlacowkaQuizDb;Trusted_Connection=True;",
            "keepConnection": "true",
            "commandText": "INSERT INTO Logi (Timestamp,Level,Message,Logger,RequestUrl,RequestType,Exception) VALUES (@timestamp, @level, @message, @logger, @requestUrl, @requestType, @exception);",
            "parameters": [
              {
                "name": "@timestamp",
                "layout": "${date}"
                //"dbType": "DbType.DateTime"
              },
              {
                "name": "level",
                "layout": "${level}"
              },
              {
                "name": "message",
                "layout": "${message}"
              },
              {
                "name": "logger",
                "layout": "${logger}"
              },
              {
                "name": "requestUrl",
                "layout": "${aspnet-request-url}"
              },
              {
                "name": "requestType",
                "layout": "${aspnet-request-method}"
              },
              {
                "name": "exception",
                "layout": "${exception:tostring}"
              }
            ]
          },
            "logconsole": {
                "type": "Console"
            }
        },
        "rules": [
          {
            "logger": "*",
            "minLevel": "Debug",
            "writeTo": "logconsole"
          },
          {
            "logger": "Microsoft.EntityFrameworkCore.*",
            "minLevel": "Error",
            "writeTo": "database"
          },
          {
            "logger": "Quiz.Api.*",
            "minLevel": "Info",
            "writeTo": "database"
          }
        ]
    }
}

